//- element page
extends page.pug

block title
  - var title = __( 'element-title', page.element.name )
  title= title + ' â€” ' + __( 'periodic-table' )
  if page.element.text
    meta( name= 'description', content= page.element.text.description )/

block social
  meta( property= 'og:title', content= title )/
  if page.element.text
    meta( property= 'og:description', content= page.element.text.description )/

block styles
  link( rel= 'stylesheet', href= '/css/element.css' )/

block content
  div.pt-page.pt-element

    //- main
    div.pt-element-main

      //- general informations
      div.pt-box.pt-element-box.pt-element-general
        h1.pt-element-title
          span.element--symbol
            span.symbol--number= page.element.data.number
            span.symbol--label= page.element.data.symbol
          span.element--name= page.element.name
          div.pt-actions.element--actions
            if page.nav && page.nav.prev
              a.pt-icon-button(
                href= core.url( '/element/' + page.nav.prev.symbol ),
                title!= __( 'navigation-prev' )
              )
                i.icon arrow_back
            a.pt-icon-button(
              href= core.url( '/' ),
              title!= __( 'periodic-table' )
            )
              i.icon grid_view
            if page.nav && page.nav.next
              a.pt-icon-button(
                href= core.url( '/element/' + page.nav.next.symbol ),
                title!= __( 'navigation-next' )
              )
                i.icon arrow_forward
            a.pt-icon-button(
              href= 'data:text/json;charset=utf-8,' + encodeURIComponent(
                JSON.stringify( page.element.data )
              ),
              download= 'data.json',
              title!= __( 'action-download' )
            )
              i.icon download
            a.pt-icon-button(
              href= 'javascript:window.print();',
              title!= __( 'action-print' )
            )
              i.icon print
        if page.element.text
          div.pt-element-text
            div.pt-element-text-content!= page.element.text.text
            div.pt-element-text-credits!= __( 'wiki-credits', 'https://wikipedia.org/wiki/' + locale + ':' + page.element.data.wiki[ locale ] )

      //- atomic properties
      div.pt-box.pt-element-box.pt-element-atomic
        h2!= __( 'atomic-props' )
        table.pt-prop-table.pt-element-table.breakable
          tbody
            if page.element.data.standard_atomic_weight
              tr.pt-prop-table-row
                th.pt-prop-table-label
                  a( href= core.url( '/scale/standard_atomic_weight' ) )!= __( 'standard-atomic-weight' )
                td.pt-prop-table-value!= f.number( page.element.data.standard_atomic_weight, 6 )
            if page.element.data.atomic_mass
              tr.pt-prop-table-row
                th.pt-prop-table-label
                  a( href= core.url( '/scale/atomic_mass' ) )!= __( 'atomic-mass' )
                td.pt-prop-table-value!= f.number( page.element.data.atomic_mass, 6 )
        //- radien
        if page.element.data.radius
          h3!= __( 'radien' )
          table.pt-prop-table.pt-element-table.breakable
            tbody
              each prop, label in page.element.data.radius
                tr.pt-prop-table-row
                  th.pt-prop-table-label
                    a( href= core.url( '/scale/radius_' + label ) )!= __( label + '-radius' )
                  td.pt-prop-table-value!= f.number( prop )
        //- electron shell data
        h3!= __( 'electron-shell' )
        table.pt-prop-table.pt-element-table.breakable
          tbody
            if page.element.data.electron_config
              tr.pt-prop-table-row
                th.pt-prop-table-label!= __( 'electron-config' )
                td.pt-prop-table-value!= f.text( page.element.data.electron_config )
            if page.element.data.ionization
              tr.pt-prop-table-row
                th.pt-prop-table-label
                  a( href= core.url( '/ionization' ) )!= __( 'ionization-title' )
                td.pt-prop-table-value!= f.number( page.element.data.ionization, 8 )
            if page.element.data.shell
              tr.pt-prop-table-row
                th.pt-prop-table-label!= __( 'shell-model' )
                td.pt-prop-table-value
                  include templates/shell.pug

      //- physic properties
      div.pt-box.pt-element-box.pt-element-physic
        h2!= __( 'physical-props' )
        table.pt-prop-table.pt-element-table.breakable
          tbody
            tr.pt-prop-table-row
              th.pt-prop-table-label!= __( 'phase-label' )
              td.pt-prop-table-value
                if page.element.data.phase
                  a(
                    href= core.url( '/list/phase/' + page.element.data.phase )
                  )!= __( 'phase-' + page.element.data.phase )
                else
                  span!= __( 'undefined' )
            if page.element.data.density
              tr.pt-prop-table-row
                th.pt-prop-table-label
                  a( href= core.url( '/scale/density' ) )!= __( 'density' )
                td.pt-prop-table-value!= f.number( page.element.data.density )
            each prop in [ 'molar_volume', 'sound_speed', 'heat_capacity', 'thermal_conductivity' ]
              if page.element.data[ prop ]
                tr.pt-prop-table-row
                  th.pt-prop-table-label
                    a( href= core.url( '/scale/' + prop ) )!= __( prop )
                  td.pt-prop-table-value!= f.number( page.element.data[ prop ] )
        //- temperatures
        if page.element.data.temperature
          h3!= __( 'temperatures' )
          table.pt-prop-table.pt-element-table.breakable
            tbody
              each prop, label in page.element.data.temperature
                tr.pt-prop-table-row
                  th.pt-prop-table-label
                    a( href= core.url( '/scale/temp_' + label ) )!= __( label + '-temp' )
                  td.pt-prop-table-value!= f.number( prop )
        //- enthalpies
        if page.element.data.enthalpy
          h3!= __( 'enthalpies' )
          table.pt-prop-table.pt-element-table.breakable
            tbody
              each prop, label in page.element.data.enthalpy
                tr.pt-prop-table-row
                  th.pt-prop-table-label
                    a( href= core.url( '/scale/enthalpy_' + label ) )!= __( label + '-enthalpy' )
                  td.pt-prop-table-value!= f.number( prop )
        //- thermal
        if page.element.data.heat
          h3!= __( 'heat-conduction' )
          table.pt-prop-table.pt-element-table.breakable
            tbody
              each prop, label in page.element.data.heat
                tr.pt-prop-table-row
                  th.pt-prop-table-label
                    a( href= core.url( '/scale/' + label ) )!= __( label )
                  td.pt-prop-table-value!= f.number( prop )
        //- hardness props
        if page.element.data.hardness
          h3!= __( 'hardnesses' )
          table.pt-prop-table.pt-element-table.breakable
            tbody
              each prop, label in page.element.data.hardness
                tr.pt-prop-table-row
                  th.pt-prop-table-label
                    a( href= core.url( '/scale/hardness_' + label ) )!= __( label + '-hardness' )
                  td.pt-prop-table-value!= f.number( prop )
        //- elastic props
        if page.element.data.elastic
          h3!= __( 'elastics' )
          table.pt-prop-table.pt-element-table.breakable
            tbody
              each prop, label in page.element.data.elastic
                tr.pt-prop-table-row
                  th.pt-prop-table-label
                    a( href= core.url( '/scale/elastic_' + label ) )!= __( label + '-elastic' )
                  td.pt-prop-table-value!= f.number( prop )
        //- electrical
        if page.element.data.electrical
          h3!= __( 'electrical' )
          table.pt-prop-table.pt-element-table.breakable
            tbody
              each prop, label in page.element.data.electrical
                tr.pt-prop-table-row
                  th.pt-prop-table-label
                    a( href= core.url( '/scale/electrical_' + label ) )!= __( 'electrical_' + label )
                  td.pt-prop-table-value!= f.number( prop )
        //- magnetism
        h3!= __( 'magnetism' )
        table.pt-prop-table.pt-element-table.breakable
          tbody
            tr.pt-prop-table-row
              th.pt-prop-table-label!= __( 'magnetic_ordering-label' )
              td.pt-prop-table-value
                if page.element.data.magnetic_ordering
                  a(
                    href= core.url( '/list/magnetic_ordering/' + page.element.data.magnetic_ordering )
                  )!= __( 'magnetic_ordering-' + page.element.data.magnetic_ordering )
                else
                  span!= __( 'undefined' )
            if page.element.data.magnetic_susceptibility
              tr.pt-prop-table-row
                th.pt-prop-table-label!= __( 'magnetic_susceptibility' )
                td.pt-prop-table-value!= f.number( page.element.data.magnetic_susceptibility )
        //- optical props
        if page.element.data.optical
          h3!= __( 'optical' )
          table.pt-prop-table.pt-element-table.breakable
            tbody
              each prop, label in page.element.data.optical
                tr.pt-prop-table-row
                  th.pt-prop-table-label
                    a( href= core.url( '/scale/optical_' + label ) )!= __( label + '-optical' )
                  td.pt-prop-table-value!= f.number( prop )

      //- chemic properties
      div.pt-box.pt-element-box.pt-element-chemic
        h2!= __( 'chemical-props' )
        table.pt-prop-table.pt-element-table.breakable
          tbody
            tr.pt-prop-table-row
              th.pt-prop-table-label!= __( 'basicity-label' )
              td.pt-prop-table-value
                if page.element.data.basicity
                  a(
                    href= core.url( '/list/basicity/' + page.element.data.basicity )
                  )!= __( 'basicity-' + page.element.data.basicity )
                else
                  span!= __( 'undefined' )
            tr.pt-prop-table-row
              th.pt-prop-table-label!= __( 'oxidation-state' )
              td.pt-prop-table-value
                if page.element.data.oxidation_state
                  span!= f.text( page.element.data.oxidation_state )
                else
                  span!= __( 'undefined' )              
            if page.element.data.standard_potential
              tr.pt-prop-table-row
                th.pt-prop-table-label
                  a( href= core.url( '/scale/standard_potential' ) )!= __( 'standard-potential' )
                td.pt-prop-table-value!= f.number( page.element.data.standard_potential )
        //- electronegativity
        if page.element.data.negativity
          h3!= __( 'electronegativity' )
          table.pt-prop-table.pt-element-table.breakable
            tbody
              each prop, label in page.element.data.negativity
                tr.pt-prop-table-row
                  th.pt-prop-table-label
                    a( href= core.url( '/scale/negativity_' + label ) )!= __( label + '-negativity' )
                  td.pt-prop-table-value!= f.number( prop )

      //- other properties
      div.pt-box.pt-element-box.pt-element-other
        h2!= __( 'other-props' )
        table.pt-prop-table.pt-element-table.breakable
          tbody
            each prop in [ 'natural_occurrence', 'crystal_structure', 'goldschmidt', 'superconductivity', 'radioactivity' ]
              if page.element.data[ prop ]
                tr.pt-prop-table-row
                  th.pt-prop-table-label!= __( prop + '-label' )
                  td.pt-prop-table-value
                    a(
                      href= core.url( '/list/' + prop + '/' + page.element.data[ prop ] )
                    )!= __( prop + '-' + page.element.data[ prop ] )
            if page.element.data.price
              tr.pt-prop-table-row
                th.pt-prop-table-label
                  a( href= core.url( '/scale/price' ) )!= __( 'price-kg' )
                td.pt-prop-table-value!= f.number( page.element.data.price )

      //- natural abundances
      if page.element.data.abundance
        - var abundances = page.element.data.abundance
        div.pt-box.pt-element-box.pt-element-abundance
          h2!= __( 'abundances-title' )
          include templates/abundance.pug

      //- properties / categories
      if page.element.data.properties
        div.pt-categories.pt-element-props
          each prop in page.element.data.properties
            a.pt-category-link(
              href= core.url( '/prop/' + prop )
            )!= __( 'prop-' + prop )

    //- aside
    aside.pt-element-aside

      //- element image
      if page.image
        div.pt-box.pt-element-box.pt-element-image
          a( href= page.image.fullres, target= '_blank' )
            img(
              src= page.image.thumb,
              alt= page.element.name
            )/
          figcaption!= page.element.data.image.caption

      //- radioactive warning
      if page.element.data.radioactive
        a( href= core.url( '/prop/radioactive' ) ).pt-box.pt-element-box.pt-box-flex.pt-element-radioactive
            img.pictogram-small(
              src= '/res/radioactive.png',
              alt= __( 'radioactive' )
            )/
            b!= __( 'element-radioactive' )

      //- element info
      div.pt-box.pt-element-box.pt-element-quickinfo
        h2!= __( 'quickinfo' )
        table.pt-prop-table.pt-element-table.breakable
          tbody
            tr.pt-prop-table-row
              th.pt-prop-table-label!= __( 'name' )
              td.pt-prop-table-value= page.element.name
            tr.pt-prop-table-row
              th.pt-prop-table-label!= __( 'latin' )
              td.pt-prop-table-value= page.element.data.names.la
            if page.element.data.appearance && page.element.data.appearance[ locale ]
              tr.pt-prop-table-row
                th.pt-prop-table-label!= __( 'appearance' )
                td.pt-prop-table-value!= f.text( page.element.data.appearance[ locale ] )
            if page.element.data.era
              tr.pt-prop-table-row
                th.pt-prop-table-label
                  a( href= core.url( '/list/era/' + page.element.data.era ) )!= __( 'discovery' )
                td.pt-prop-table-value
                  if page.element.data.discovery
                    span!= page.element.data.discovery.by + ' (' + page.element.data.discovery.value + ')'
                  else
                    span!= __( 'era-' + page.element.data.era )
            each prop in [ 'group', 'period', 'set', 'block' ]
              if page.element.data[ prop ]
                tr.pt-prop-table-row
                  th.pt-prop-table-label!= __( prop + '-label' )
                  td.pt-prop-table-value
                    a( href= core.url( '/list/' + prop + '/' + page.element.data[ prop ] ) )
                      span!= __( prop + '-' + page.element.data[ prop ] )

      //- spectral lines
      if page.element.spectrum
        div.pt-box.pt-element-box.pt-element-spectrum
          h2!= __( 'spectrum-title' )
          img(
            src= page.element.spectrum,
            alt= __( 'spectrum-title' )
          )/
          a.pt-icon-link( href= core.url( '/spectrum' ) )
            i.icon clear_all
            span= __( 'all-spectra' )

      //- hazard classification
      if page.element.data.hazard
        - var hazard = page.element.data.hazard
        div.pt-box.pt-element-box.pt-element-hazard
          h2!= __( 'hazard-classification' )
          include templates/hazard.pug

      //- toxicity
      if page.element.data.toxicity
        - var toxicity = page.element.data.toxicity
        div.pt-box.pt-element-box.pt-element-toxicity
          h2!= __( 'toxicity' )
          include templates/toxicity.pug

      //- element classification
      if page.element.data.classification
        - var classification = page.element.data.classification
        div.pt-box.pt-element-box.pt-element-classification
          h2!= __( 'classification' )
          include templates/classification.pug

      //- nuclides
      if page.element.nuclides && page.element.nuclides.nuclides
        - var nuclides = page.element.nuclides
        - var nuclides_mini = true
        div.pt-box.pt-element-box.pt-element-classification
          h2!= __( 'nuclides' )
          include templates/nuclides-table.pug
          a.pt-icon-link( href= core.url( '/nuclide/' + nuclides.symbol ) )
            i.icon clear_all
            span= __( 'all-nuclides' )
          a.pt-icon-link( href= core.url( '/nuclides' ) )
            i.icon grid_4x4
            span= __( 'nuclides-title' )

      //- weblinks
      div.pt-box.pt-element-box.pt-element-weblinks
        h2!= __( 'weblinks' )
        if page.element.data.wiki && page.element.data.wiki[ locale ]
          a.weblink( href= 'https://wikipedia.org/wiki/' + locale + ':' + page.element.data.wiki[ locale ] )
            i.icon link
            span!= __( 'weblink-wiki', page.element.name, locale )
        if page.element.data.weblinks
          each link in page.element.data.weblinks
            a.weblink( href= link.url )
              i.icon link
              span= link.text

      //- @modified
      if page.element.data[ '@modified' ]
        p.pt-modified!= __( '@modified', f.date( page.element.data[ '@modified' ] ) )

  div.pt-page.pt-element-footer
    include templates/microtable.pug