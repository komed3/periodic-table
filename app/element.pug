//- element page
extends page.pug

block title
  - var title = __( 'element-title', page.element.name )
  title= title + ' â€” ' + __( 'periodic-table' )
  if page.element.text
    meta( name= 'description', content= page.element.text.description )/

block social
  meta( property= 'og:title', content= title )/
  if page.element.text
    meta( property= 'og:description', content= page.element.text.description )/

block styles
  link( rel= 'stylesheet', href= '/css/element.css' )/

block content
  div.pt-page.pt-element

    //- main
    div.pt-element-main

      //- general informations
      div.pt-box.pt-element-box.pt-element-general
        h1.pt-element-title
          span.element--symbol
            span.symbol--number= page.element.data.number
            span.symbol--label= page.element.data.symbol
          span.element--name= page.element.name
          div.pt-actions.element--actions
            if page.nav && page.nav.prev
              a.pt-icon-button(
                href= core.url( '/element/' + page.nav.prev.symbol ),
                title!= __( 'navigation-prev' )
              )
                i.icon arrow_back
            a.pt-icon-button(
              href= core.url( '/' ),
              title!= __( 'periodic-table' )
            )
              i.icon grid_view
            if page.nav && page.nav.next
              a.pt-icon-button(
                href= core.url( '/element/' + page.nav.next.symbol ),
                title!= __( 'navigation-next' )
              )
                i.icon arrow_forward
            a.pt-icon-button(
              href= 'data:text/json;charset=utf-8,' + encodeURIComponent(
                JSON.stringify( page.element.data )
              ),
              download= 'data.json',
              title!= __( 'action-download' )
            )
              i.icon download
            a.pt-icon-button(
              href= 'javascript:window.print();',
              title!= __( 'action-print' )
            )
              i.icon print
        if page.element.text
          div.pt-element-text
            div.pt-element-text-content!= page.element.text.text
            div.pt-element-text-credits!= __( 'wiki-credits', 'https://wikipedia.org/wiki/' + locale + ':' + page.element.data.wiki[ locale ] )

      //- atomic properties
      div.pt-box.pt-element-box.pt-element-atomic
        h2!= __( 'atomic-props' )
        table.pt-prop-table.pt-element-table
          tbody
            if page.element.data.standard_atomic_weight
              tr.pt-prop-table-row
                th.pt-prop-table-label
                  a( href= core.url( '/scale/standard_atomic_weight' ) )!= __( 'standard-atomic-weight' )
                td.pt-prop-table-value!= f.number( page.element.data.standard_atomic_weight )
            if page.element.data.atomic_mass
              tr.pt-prop-table-row
                th.pt-prop-table-label
                  a( href= core.url( '/scale/atomic_mass' ) )!= __( 'atomic-mass' )
                td.pt-prop-table-value!= f.number( page.element.data.atomic_mass )
        //- radien
        if page.element.data.radius
          h3!= __( 'radien' )
          table.pt-prop-table.pt-element-table
            tbody
              each prop, label in page.element.data.radius
                tr.pt-prop-table-row
                  th.pt-prop-table-label
                    a( href= core.url( '/scale/radius_' + label ) )!= __( label + '-radius' )
                  td.pt-prop-table-value!= f.number( prop )
        //- electron shell data
        h3!= __( 'electron-shell' )
        table.pt-prop-table.pt-element-table
          tbody
            if page.element.data.electron_config
              tr.pt-prop-table-row
                th.pt-prop-table-label!= __( 'electron-config' )
                td.pt-prop-table-value!= f.text( page.element.data.electron_config )
            if page.element.data.ionization
              tr.pt-prop-table-row
                th.pt-prop-table-label
                  a( href= core.url( '/ionization' ) )!= __( 'ionization-energy' )
                td.pt-prop-table-value!= f.number( page.element.data.ionization )
            if page.element.data.shell
              tr.pt-prop-table-row
                th.pt-prop-table-label!= __( 'shell-model' )
                td.pt-prop-table-value
                  include templates/shell.pug

      //- physic properties
      div.pt-box.pt-element-box.pt-element-physic
        h2!= __( 'physical-props' )

      //- chemic properties
      div.pt-box.pt-element-box.pt-element-chemic
        h2!= __( 'chemical-props' )

    //- aside
    aside.pt-element-aside

      //- element image
      if page.image
        div.pt-box.pt-element-box.pt-element-image
          a( href= page.image.fullres, target= '_blank' )
            img(
              src= page.image.thumb,
              alt= page.element.name
            )/
          figcaption!= page.element.data.image.caption

      //- element info
      div.pt-box.pt-element-box.pt-element-quickinfo
        h2!= __( 'quickinfo' )
        table.pt-prop-table.pt-element-table
          tbody
            tr.pt-prop-table-row
              th.pt-prop-table-label!= __( 'name' )
              td.pt-prop-table-value= page.element.name
            tr.pt-prop-table-row
              th.pt-prop-table-label!= __( 'latin' )
              td.pt-prop-table-value= page.element.data.names.la
            if page.element.data.appearance && page.element.data.appearance[ locale ]
              tr.pt-prop-table-row
                th.pt-prop-table-label!= __( 'appearance' )
                td.pt-prop-table-value!= f.text( page.element.data.appearance[ locale ] )
            if page.element.data.era
              tr.pt-prop-table-row
                th.pt-prop-table-label
                  a( href= core.url( '/list/era/' + page.element.data.era ) )!= __( 'discovery' )
                td.pt-prop-table-value
                  if page.element.data.discovery
                    span!= page.element.data.discovery.by + ' (' + page.element.data.discovery.value + ')'
                  else
                    span!= __( 'era-' + page.element.data.era )
            each prop in [ 'group', 'period', 'set', 'block' ]
              if page.element.data[ prop ]
                tr.pt-prop-table-row
                  th.pt-prop-table-label!= __( prop + '-label' )
                  td.pt-prop-table-value
                    a( href= core.url( '/list/' + prop + '/' + page.element.data[ prop ] ) )
                      span!= __( prop + '-' + page.element.data[ prop ] )

      //- spectral lines
      if page.element.spectrum
        div.pt-box.pt-element-box.pt-element-spectrum
          h2
            a( href= core.url( '/spectrum' ) )!= __( 'spectrum-title' )
          img(
            src= page.element.spectrum,
            alt= __( 'spectrum-title' )
          )/

  div.pt-page.pt-element-footer
    include templates/microtable.pug