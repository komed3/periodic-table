//- element.pug
extends layout.pug

block title
  title= __( 'element-title', element.names[ locale ] ) + ' â€” ' + __( 'title' )
  if text.description
    meta( name="description", content=text.description )/

block social
  meta( property="og:title", content=element.names[ locale ] )/
  if text.description
    meta( property="og:description", content=text.description )/
  if image
    meta( property="og:image", content=image.url )/

block styles
  link( rel="stylesheet", href="/css/element.css" )/
  link( rel="stylesheet", href="/css/shell.css" )/
  link( rel="stylesheet", href="/css/isotable.css" )/
  link( rel="stylesheet", href="/css/toxicity.css" )/
  link( rel="stylesheet", href="/css/microtable.css" )/

block content
  div.pt-element

    //- main
    div.pt-element-container

      //- element intro
      div.pt-box.pt-element-intro
        //- element title
        h1.element--title
          span.element--symbol
            span.symbol--number= element.number
            span.symbol--label= element.symbol
          span.element--name= element.names[ locale ]
          //- actions
          div.pt-actions.element--actions
            if nav.prev
              a(
                href='/e/' + elements[ nav.prev ].symbol,
                title!= __( 'navigation-prev' )
              )
                i.icon arrow_back
            a(
              href="/",
              title!= __( 'title' )
            )
              i.icon grid_view
            if nav.next
              a(
                href='/e/' + elements[ nav.next ].symbol,
                title!= __( 'navigation-next' )
              )
                i.icon arrow_forward
            a(
              href='data:text/json;charset=utf-8,' + encodeURIComponent(
                JSON.stringify( element )
              ),
              download="data.json", title!= __( 'download' )
            )
              i.icon download
            a(
              href="javascript:window.print();",
              title!= __( 'print' )
            )
              i.icon print
        //- element (summary) text
        if text.text
          div.pt-element-summary
            div.pt-element-summary-text!= text.text
            div.pt-element-summary-credits!= __( 'wiki-credits', 'https://wikipedia.org/wiki/' + locale + ':' + element.wiki[ locale ] )

      //- atomic properties
      div.pt-box.pt-element-properties
        h2!= __( 'prop-atomic' )
        table.pt-prop-table.pt-element-table
          tbody
            if element.standard_atomic_weight
              tr.pt-prop-table-row
                th.pt-prop-table-label
                  a( href="/scale/standard_atomic_weight" )!= __( 'standard-atomic-weight' )
                td.pt-prop-table-value!= core.fNumber( element.standard_atomic_weight )
            if element.atomic_mass
              tr.pt-prop-table-row
                th.pt-prop-table-label
                  a( href="/scale/atomic_mass" )!= __( 'atomic-mass' )
                td.pt-prop-table-value!= core.fNumber( element.atomic_mass )
        //- radien
        if element.radius
          h3!= __( 'radien' )
          table.pt-prop-table.pt-element-table
            tbody
              each prop, label in element.radius
                tr.pt-prop-table-row
                  th.pt-prop-table-label
                    a( href='/scale/radius_' + label )!= __( label + '-radius' )
                  td.pt-prop-table-value!= core.fNumber( prop )
        //- electron shell data
        h3!= __( 'electron-shell' )
        table.pt-prop-table.pt-element-table
          tbody
            if element.electron_config
              tr.pt-prop-table-row
                th.pt-prop-table-label!= __( 'electron-config' )
                td.pt-prop-table-value!= core.fText( element.electron_config )
            if element.ionization
              tr.pt-prop-table-row
                th.pt-prop-table-label
                  a( href="/ionization" )!= __( 'ionization-energy' )
                td.pt-prop-table-value!= core.fNumber( element.ionization )
            if element.shell
              tr.pt-prop-table-row
                th.pt-prop-table-label!= __( 'shell' )
                td.pt-prop-table-value
                  include templates/shell.pug

      //- physical properties
      div.pt-box.pt-element-properties
        h2!= __( 'prop-physical' )
        table.pt-prop-table.pt-element-table
          tbody
            tr.pt-prop-table-row
              th.pt-prop-table-label!= __( 'phase-label' )
              td.pt-prop-table-value
                if element.phase
                  a( href='/list/phase/' + element.phase )!= __( 'phase-' + element.phase )
                else
                  span!= __( 'undefined' )
            if element.density
              tr.pt-prop-table-row
                th.pt-prop-table-label
                  a( href="/scale/density" )!= __( 'density' )
                td.pt-prop-table-value!= core.fNumber( element.density )
            each prop in [ 'molar_volume', 'sound_speed', 'heat_capacity', 'thermal_conductivity' ]
              if element[ prop ]
                tr.pt-prop-table-row
                  th.pt-prop-table-label
                    a( href='/scale/' + prop )!= __( prop )
                  td.pt-prop-table-value!= core.fNumber( element[ prop ] )
        //- temperatures
        if element.temperature
          h3!= __( 'temperatures' )
          table.pt-prop-table.pt-element-table
            tbody
              each prop, label in element.temperature
                tr.pt-prop-table-row
                  th.pt-prop-table-label
                    a( href='/scale/temp_' + label )!= __( label + '-temp' )
                  td.pt-prop-table-value!= core.fNumber( prop )
        //- enthalpies
        if element.enthalpy
          h3!= __( 'enthalpies' )
          table.pt-prop-table.pt-element-table
            tbody
              each prop, label in element.enthalpy
                tr.pt-prop-table-row
                  th.pt-prop-table-label
                    a( href='/scale/enthalpy_' + label )!= __( label + '-enthalpy' )
                  td.pt-prop-table-value!= core.fNumber( prop )
        //- hardness props
        if element.hardness
          h3!= __( 'hardnesses' )
          table.pt-prop-table.pt-element-table
            tbody
              each prop, label in element.hardness
                tr.pt-prop-table-row
                  th.pt-prop-table-label
                    a( href='/scale/hardness_' + label )!= __( label + '-hardness' )
                  td.pt-prop-table-value!= core.fNumber( prop )
        //- elastic props
        if element.elastic
          h3!= __( 'elastics' )
          table.pt-prop-table.pt-element-table
            tbody
              each prop, label in element.elastic
                tr.pt-prop-table-row
                  th.pt-prop-table-label
                    a( href='/scale/elastic_' + label )!= __( label + '-elastic' )
                  td.pt-prop-table-value!= core.fNumber( prop )
        //- magnetism
        h3!= __( 'magnetism' )
        table.pt-prop-table.pt-element-table
          tbody
            tr.pt-prop-table-row
              th.pt-prop-table-label!= __( 'magnetic_ordering-label' )
              td.pt-prop-table-value
                if element.magnetic_ordering
                  a( href='/list/magnetic_ordering/' + element.magnetic_ordering )!= __( 'magnetic_ordering-' + element.magnetic_ordering )
                else
                  span!= __( 'undefined' )
            if element.magnetic_susceptibility
              tr.pt-prop-table-row
                th.pt-prop-table-label!= __( 'magnetic_susceptibility' )
                td.pt-prop-table-value!= core.fNumber( element.magnetic_susceptibility )
        //- optical props
        if element.optical
          h3!= __( 'optical' )
          table.pt-prop-table.pt-element-table
            tbody
              each prop, label in element.optical
                tr.pt-prop-table-row
                  th.pt-prop-table-label
                    a( href='/scale/optical_' + label )!= __( label + '-optical' )
                  td.pt-prop-table-value!= core.fNumber( prop )

      //- chemical properties
      div.pt-box.pt-element-properties
        h2!= __( 'prop-chemical' )
        table.pt-prop-table.pt-element-table
          tbody
            if element.basicity
              tr.pt-prop-table-row
                th.pt-prop-table-label!= __( 'basicity-label' )
                td.pt-prop-table-value
                  a( href='/list/basicity/' + element.basicity )!= __( 'basicity-' + element.basicity )
            if element.oxidation_state
              tr.pt-prop-table-row
                th.pt-prop-table-label!= __( 'oxidation-state' )
                td.pt-prop-table-value!= core.fText( element.oxidation_state )
            if element.standard_potential
              tr.pt-prop-table-row
                th.pt-prop-table-label
                  a( href="/scale/standard_potential" )!= __( 'standard-potential' )
                td.pt-prop-table-value!= core.fNumber( element.standard_potential )
        //- electronegativity
        if element.negativity
          h3!= __( 'electronegativity' )
          table.pt-prop-table.pt-element-table
            tbody
              each prop, label in element.negativity
                tr.pt-prop-table-row
                  th.pt-prop-table-label
                    a( href='/scale/negativity_' + label )!= __( label + '-negativity' )
                  td.pt-prop-table-value!= core.fNumber( prop )

      //- other properties
      div.pt-box.pt-element-properties
        h2!= __( 'prop-other' )
        table.pt-prop-table.pt-element-table
          tbody
            each prop in [ 'natural_occurrence', 'radioactivity', 'goldschmidt', 'crystal_structure' ]
              if element[ prop ]
                tr.pt-prop-table-row
                  th.pt-prop-table-label!= __( prop + '-label' )
                  td.pt-prop-table-value
                    a( href='/list/' + prop + '/' + element[ prop ] )!= __( prop + '-' + element[ prop ] )
            if element.superconductivity
              tr.pt-prop-table-row
                th.pt-prop-table-label!= __( 'superconductivity-label' )
                td.pt-prop-table-value
                  a( href='/list/superconductivity/' + element.superconductivity )!= __( 'superconductivity-' + element.superconductivity )
            if element.sc_temp
              tr.pt-prop-table-row
                th.pt-prop-table-label
                  a( href="/scale/sc_temp" )!= __( 'sc_temp' )
                td.pt-prop-table-value!= core.fNumber( element.sc_temp )
            if element.price
              tr.pt-prop-table-row
                th.pt-prop-table-label
                  a( href="/scale/price" )!= __( 'price-kg' )
                td.pt-prop-table-value!= core.fNumber( element.price )
            tr.pt-prop-table-row
              th.pt-prop-table-label!= __( 'properties' )
              td.pt-prop-table-value.pt-prop-table-list
                each prop in element.properties
                  span.pt-prop-table-list-item
                    a( href='/prop/' + prop )!= __( 'prop-' + prop )

      //- isotopes
      if isotopes.length > 0
        div.pt-box.pt-element-properties
          h2!= __( 'prop-isotopes' )
          include templates/isotable.pug

      //- abundance
      if element.abundance
        div.pt-box.pt-element-abundance
          h2!= __( 'abundances-title' )
          div.pt-element-abundance-grid
            each abundance, k in config.abundances
              div.pt-element-abundance-item
                i.icon.pt-element-abundance-icon!= abundance.icon
                div.pt-element-abundance-info
                  a( href="/abundance/" + k )!= __( k + '-abundance' )
                  if k in element.abundance
                    - var mass = element.abundance[ k ].value / 1e9 * abundance.mass
                    div!= core.fNumber( element.abundance[ k ] ) + ' â‰ˆ&nbsp;' + core.fWeight( mass )[0]
                  else
                    div!= __( 'undefined' )

    //- aside
    aside.pt-element-aside

      //- element image
      if image
        div.pt-box.pt-element-image
          a( href=image.fullres, target="_blank" )
            img( src=image.thumb, loading="lazy", alt= element.names[ locale ] )/
          figcaption!= element.image.caption

      //- element info
      div.pt-box.pt-element-quickinfo
        h2!= __( 'quickinfo' )
        table.pt-prop-table.pt-element-table
          tbody
            tr.pt-prop-table-row
              th.pt-prop-table-label!= __( 'name' )
              td.pt-prop-table-value= element.names[ locale ]
            tr.pt-prop-table-row
              th.pt-prop-table-label!= __( 'latin' )
              td.pt-prop-table-value= element.names.la
            if element.appearance && element.appearance[ locale ]
              tr.pt-prop-table-row
                th.pt-prop-table-label!= __( 'appearance' )
                td.pt-prop-table-value!= core.fText( element.appearance[ locale ] )
            if element.era
              tr.pt-prop-table-row
                th.pt-prop-table-label
                  a( href= '/list/era/' + element.era )!= __( 'discovery' )
                td.pt-prop-table-value
                  if element.discovery
                    span!= element.discovery.by + ' (' + element.discovery.value + ')'
                  else
                    span!= __( 'era-' + element.era )
            each prop in [ 'group', 'period', 'set', 'block' ]
              if element[ prop ]
                tr.pt-prop-table-row
                  th.pt-prop-table-label!= __( prop + '-label' )
                  td.pt-prop-table-value
                    a( href='/list/' + prop + '/' + element[ prop ] )!= __( prop + '-' + element[ prop ] )

      //- spectral lines
      if spectrum && spectrum.length
        div.pt-box.pt-element-spectrum
          h2
            a( href="/spectrum" )!= __( 'spectrum-title' )
          img( src= spectrum, alt= __( 'spectrum-title' ) )

      //- radioactive warning
      if element.radioactive
        a( href="/prop/radioactive" ).pt-box.pt-box-flex.pt-element-radioactive
            img.pictogram-small( src="/res/radioactive.png", loading="lazy", alt= __( 'radioactive' ) )/
            b!= __( 'element-radioactive' )

      //- hazard classification
      if element.hazardous
        div.pt-box.pt-element-hazard
          h2!= __( 'ghs-title' )
          if element.hazardous.ghs
            div.pt-box-flex.pt-box-columns.pt-element-hazard-box
              each ghs in element.hazardous.ghs
                div.pt-element-hazard-item
                  img.pictogram( src='/res/GHS' + ghs + '.png', loading="lazy", alt= __( 'pictogram' ) )/
                  span!= __( 'ghs-' + ghs )
          else
            i!= __( 'ghs-undefined' )
          div.pt-element-hazard-statements
            h3!= __( 'hazard-precautionary' )
            div.hazard--statements
              div.hazard--line
                b H
                if element.hazardous.h
                  span!= element.hazardous.h.join( ', ' )
                else
                  i!= __( 'hazard-precautionary-undefined' )
              div.hazard--line
                b P
                if element.hazardous.p
                  span!= element.hazardous.p.join( ', ' )
                else
                  i!= __( 'hazard-precautionary-undefined' )
          if element.hazardous.nfpa
            h3!= __( 'nfpa-title' )
            div.pt-box-flex.pt-nfpa
              div.pt-nfpa-diamond
                each key in [ 'h', 'f', 'i', 's' ]
                  div( class=key, style='--code:' + key )
                    each code in ( element.hazardous.nfpa[ key ] || 'â€”' ).split( '|' )
                      b( code=code )= code
              div.pt-nfpa-info
                each key in [ 'h', 'f', 'i', 's' ]
                  div.pt-nfpa-info-line
                    b!= __( 'nfpa-' + key )
                    each code in ( element.hazardous.nfpa[ key ] || 'undefined' ).split( '|' )
                      span!= __( 'nfpa-' + key + '-' + code )
          if element.hazardous.hazard
            h3!= __( 'pictogram-title' )
            div.pt-element-hazard-pictograms
              each hazard in element.hazardous.hazard
                img.pictogram-small( src='/res/hazard-' + hazard + '.png', loading="lazy", alt= __( 'pictogram' ) )/
          if element.hazardous.adr
            h3!= __( 'adr-title' )
            div.pt-element-hazard-pictograms
              each adr in element.hazardous.adr
                img.pictogram( src='/res/ADR-' + adr + '.png', loading="lazy", alt= __( 'pictogram' ) )/

      //- toxicity
      if element.toxicity
        - var toxicity = element.toxicity
        div.pt-box.pt-element-toxicity
          h2!= __( 'toxicity' )
          include templates/toxicity.pug

      //- element classification
      if element.classification
        div.pt-box.pt-element-classification
          h2!= __( 'classification' )
          div.pt-box-flex.pt-box-columns
            each classif in [ 'cas', 'eg', 'echa', 'atc' ]
              if element.classification[ classif ]
                div.pt-element-classification-item
                  b!= __( 'classification-' + classif )
                  each c in element.classification[ classif ]
                    span.pt-element-classification-line
                      if classif == 'eg'
                        span= c.value
                      else
                        a.external(
                          href!= core.classifLink( classif, c.value ),
                          target="_blank"
                        )= c.value
                      if c.label && c.label.length
                        span!= '&nbsp;(' + core.fText( c.label ) + ')'

      //- weblinks
      div.pt-box.pt-element-weblinks
        h2!= __( 'weblinks' )
        if element.wiki && element.wiki[ locale ]
          a( href='https://wikipedia.org/wiki/' + locale + ':' + element.wiki[ locale ] ).weblink
            i.icon link
            span!= __( 'weblink-wiki', element.names[ locale ], locale )
        if element.weblinks
          each link in element.weblinks
            a( href=link.url ).weblink
              i.icon link
              span= link.text

      //- @modified
      if element[ '@modified' ]
        p.pt-element-modified!= __( '@modified', core.fDate( element[ '@modified' ] ) )

    //- footer
    div.pt-element-footer

      //- tpl:microtable
      include templates/microtable.pug